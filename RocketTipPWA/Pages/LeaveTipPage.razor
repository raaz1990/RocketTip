@page "/LeaveTipPage"
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations


<style>

    .validation-errors {
        padding-inline-start: 0px !important;
        list-style: none !important;
    }
    .leave-tip-page {
        padding: 20px;
        background-color: white;
    }

    .header-section {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 25px;
    }

        .header-section img {
            width: 100px;
            margin-left: 10px;
        }

    .bill-section,
    .custom-tip-section,
    .split-tip-section {
        margin-bottom: 25px;
    }

        .bill-section label,
        .custom-tip-section label,
        .split-tip-section label {
            font-size: 18px;
            font-weight: bold;
            display: block;
            margin-bottom: 10px;
        }

    .input-grid {
        display: grid;
        grid-template-columns: 1fr auto;
        grid-gap: 10px;
        align-items: center;
    }

        .input-grid input {
            padding: 10px;
            font-size: 18px;
            width: 100%;
            border: 1px solid gray;
            border-radius: 5px;
        }

        .input-grid button {
            padding: 10px;
            background-color: #FF3D58;
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 12px;
        }

    .percentage-buttons {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

        .percentage-buttons button {
            background-color: white;
            color: black;
            border: 1px solid black;
            border-radius: 5px;
            padding: 10px;
            width: 100px;
            height: 55px;
        }

    /* Tip Amount Section */
    .tip-amount {
        text-align: center;
        margin-top: 20px;
    }

        .tip-amount label {
            font-size: 16px;
            display: block;
        }

        .tip-amount h3 {
            font-size: 36px;
            font-weight: bold;
            color: black;
        }

    /* Reward Button */
    .reward-button {
        margin-top: 30px;
        text-align: center;
    }

        .reward-button button {
            background-color: #FF3D58;
            color: white;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            width: 100%;
            height: 50px;
            cursor: pointer;
            margin-top: 20px;
        }


    /* Bottom Tab Bar */
    .bottom-tab-bar {
        position: fixed;
        bottom: 0;
        width: 100%;
        background-color: #2196F3;
        display: flex;
        justify-content: space-around;
        padding: 10px;
    }

        .bottom-tab-bar .tab-icon {
            width: 24px;
            height: 24px;
            cursor: pointer;
        }

        .bottom-tab-bar .tab-label {
            color: white;
            font-size: 12px;
        }
</style>

<!-- Main Container -->
<div class="leave-tip-page">
    <!-- Header -->
    <div class="header-section">
        <label>Thank you for using </label>
        <img src="images/rockettipslogo.png" alt="Rocket Tips Logo" />
    </div>

    <EditForm Model="@leaveTipModel" OnValidSubmit="OnClaimTapped">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <!-- Total Bill Section -->
        <div class="bill-section">
            <label for="totalBill">Total Bill</label>
            <div class="input-grid">
                <InputNumber id="totalBill" @bind-Value="leaveTipModel.TotalBill" placeholder="Enter total bill" class="form-control" />
                <button @onclick="OnChangeCurrency">Change Currency</button>
            </div>
        </div>

        <!-- Tip Percentage Buttons -->
        <div class="percentage-buttons">
            <button @onclick="() => OnPercentageClicked(10)">10%</button>
            <button @onclick="() => OnPercentageClicked(15)">15%</button>
            <button @onclick="() => OnPercentageClicked(20)">20%</button>
        </div>

        <!-- Custom Tip Section -->
        <div class="custom-tip-section">
            <label for="customTip">Custom Tip</label>
            <div class="input-grid">
                <InputNumber id="customTip" @bind-Value="leaveTipModel.CustomTip" placeholder="Enter Custom Tip" class="form-control" />
                <button @onclick="OnChangeCurrency">Change Currency</button>
            </div>
        </div>

        <!-- Split the Tip Section -->
        <div class="split-tip-section">
            <label for="splitTip">Split the Tip?</label>
            <div class="input-grid">
                <InputNumber id="splitTip" @bind-Value="leaveTipModel.SplitTip" placeholder="Number of people" class="form-control" />
                <label>people</label>
            </div>
        </div>

        <!-- Tip Amount Section -->
        <div class="tip-amount">
            <label>Your Tip (Including Fee of $0.50)</label>
            <h3>@TipAmount</h3>
        </div>

        <!-- Reward Button -->
        <div class="reward-button">
            <button type="submit">Reward Your Wait Staff</button>
        </div>
    </EditForm>
</div>

@code {
    // Model to hold the form data
    private LeaveTipModel leaveTipModel = new LeaveTipModel();

    // Method to calculate the tip amount (including fee)
    private decimal TipAmount => leaveTipModel.CalculateTipAmount();

    private void OnPercentageClicked(int percentage)
    {
        leaveTipModel.CustomTip = leaveTipModel.TotalBill * percentage / 100;
    }

    private void OnChangeCurrency()
    {
        // Currency change logic here
    }

    // Method for reward button
    private void OnClaimTapped()
    {
        // Claim logic, for example, navigate to a different page
        Navigation.NavigateTo("/paytip");
    }

    // Model class with data annotations for validation
    public class LeaveTipModel
    {
        [Required(ErrorMessage = "Total bill is required.")]
        [Range(0.01, double.MaxValue, ErrorMessage = "Total bill must be greater than zero.")]
        public decimal TotalBill { get; set; }

        [Range(0.01, double.MaxValue, ErrorMessage = "Custom tip must be greater than zero.")]
        public decimal CustomTip { get; set; }

        [Range(1, int.MaxValue, ErrorMessage = "Please enter a valid number of people.")]
        public int SplitTip { get; set; }

        public decimal CalculateTipAmount()
        {
            decimal fee = 0.50m; // Example fee
            return CustomTip + fee;
        }
    }
}
